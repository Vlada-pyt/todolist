name: CI
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build
        run: docker build -t vladapython/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - name: push
        run: docker push vladapython/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: render config
        run: |
          mkdir deploy
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export DB_USER=${{ secrets.DB_USER }}
          export DB_NAME=${{ secrets.DB_NAME }}
          export SOCIAL_AUTH_VK_OAUTH2_KEY=${{ secrets.SOCIAL_AUTH_VK_OAUTH2_KEY }}
          export SOCIAL_AUTH_VK_OAUTH2_SECRET=${{ secrets.SOCIAL_AUTH_VK_OAUTH2_SECRET }}
          export TOKEN=${{ secrets.BOT_TOKEN }}
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
      - name: copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "deploy"
          strip_components: 1
      - name: run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd deploy
            docker-compose up -d
      - name: clean up
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker system prune -a -f